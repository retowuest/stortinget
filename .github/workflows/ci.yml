name: CI

on: [push, pull_request]

jobs:
  # ----------------------------------------
  # 1. Linting and formatting
  # ----------------------------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      # 1a. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v5

      # 1b. Set up uv via composite action
      - name: Set up uv
        uses: ./.github/actions/uv-setup

      # 1c. Run Ruff lint
      - name: Run Ruff lint
        run: uv run ruff check .

      # 1d. Run Ruff format
      - name: Run Ruff format
        run: uv run ruff format --check .

      # 1e. Run SQLFluff lint
      - name: Run SQLFluff lint
        run: uv run sqlfluff lint ./dbt_project/models

  # ----------------------------------------
  # 2. Python tests (unit, integration, e2e)
  # ----------------------------------------
  pytest:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      # 2a. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v5

      # 2b. Set up uv via composite action
      - name: Set up uv
        uses: ./.github/actions/uv-setup

      # 2c. Run pytest
      - name: Run pytest
        run: uv run pytest

  # ----------------------------------------
  # 3. dbt checks (SQL transformations)
  # ----------------------------------------
  dbt:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      # 3a. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v5

      # 3b. Set up uv via composite action
      - name: Set up uv
        uses: ./.github/actions/uv-setup

      # 3c. Cache DuckDB dev database
      - name: Cache DuckDB dev database
        uses: actions/cache@v4
        with:
          path: dbt_project/dev.duckdb
          key: duckdb-${{ hashFiles('dbt_project/**/*.sql', 'dbt_project/**/*.yml') }}
          restore-keys: |
            duckdb-

      # 3d. Run dbt compile
      - name: Run dbt compile
        working-directory: ./dbt_project
        run: uv run dbt compile --profiles-dir .

      # 3e. Run dbt tests
      - name: Run dbt test
        working-directory: ./dbt_project
        run: uv run dbt test --profiles-dir .

  # ----------------------------------------
  # 4. Pre-commit hooks
  # ----------------------------------------
  precommit:
    runs-on: ubuntu-latest
    needs: [pytest, dbt]
    steps:
      # 4a. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v5

      # 4b. Set up uv via composite action
      - name: Set up uv
        uses: ./.github/actions/uv-setup

      # 4c. Run pre-commit hooks
      - name: Run pre-commit hooks
        run: uv run pre-commit run --all-files --show-diff-on-failure
